{"version":3,"sources":["actions/loginAction.js","Firebase.js","store.js","Landing.js","Login.js","Signup.js","actions/gotPostsAction.js","actions/deleteAction.js","actions/editAction.js","Rewrite.js","Item.js","ItemList.js","util/sortHeadlines.js","NewsHome.js","Newspaper.js","Category.js","UserPage.js","NewPost.js","Detail.js","TopBar.js","App.js","serviceWorker.js","index.js"],"names":["loginAction","name","uid","type","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","date","yesterday","Date","setDate","getDate","toJSON","slice","Firebase","_this","this","Object","classCallCheck","createUser","email","pass","auth","createUserWithEmailAndPassword","then","res","user","updateProfile","displayName","login","signInWithEmailAndPassword","logOut","signOut","resetPass","sendPasswordResetEmail","updatePass","newPass","currentUser","updatePassword","newArticle","title","url","category","old","newPost","db","ref","push","d","set","newHeadline","storyID","headline","console","log","newHeadlineKey","key","updates","username","votes","defineProperty","story","update","fakeVotes","postID","headlineID","count","post","i","fakeUID","uuid","v4","substr","up","Math","random","vote","v","getTopPosts","orderByChild","equalTo","once","getSubmissionsByUser","getSubmissionByID","subID","getStorySubmissionByID","storyAndSubID","getStoryByID","app","initializeApp","database","unsub","onAuthStateChanged","store","dispatch","num","createStore","state","action","objectSpread","userID","posts","data","filter","map","oldPost","newTitle","newURL","firebase","categories","Landing","react_default","a","createElement","LoginForm","props","possibleConstructorReturn","getPrototypeOf","call","error","event","_this2","preventDefault","setState","history","setLogin","catch","target","value","className","onSubmit","submit","bind","onChange","change","message","react_router_dom","to","React","Component","Connected","connect","Login","withRouter","SignupForm","authUser","SignupPage","gotPostsAction","deleteAction","editAction","Rewrite","rw","temp","score","style","marginLeft","buttons","onClick","Item","headlines","show","newkey","newhl","concat","length","values","reduce","cur","orTitle","src_Rewrite","Item_NewSubmission","NewSubmission","_useState","useState","_useState2","slicedToArray","inEdit","setInEdit","Item_Editor","cancel","Editor","text_ref","createRef","width","height","current","deleteSuccess","id","editSuccess","logged_in_user","s","items","item","src_Item","timestamp","sortHeadlines","submissions","keys","sort","b","NewsHome","stories","val","postsObject","subs","k","getSubmissionsForPost","Promise","all","results","r","sub","index","gotPosts","e","src_ItemList","Newspaper","Category","show_category","UserPage","postsAndUserSubmissions","match","params","storiesWithUserSubs","story_keys","subPromises","flat","path","toString","split","forEach","story_promises","story_data","isValidURL","str","NewPost","_ref","cat","_this3","selector","_this4","fake","fake_yesterday","fakeSubs","autoComplete","autoFocus","placeholder","Detail","ownProps","disp","doLogout","react_router","exact","component","Signup","App","src_TopBar","Boolean","window","location","hostname","ReactDOM","render","es","configureStore","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fa001571.chunk.js","sourcesContent":["let loginAction = (name, uid) => {\n\treturn ({type: 'LOGIN_ACTION', name: name, uid:uid});\n}\n\nexport default loginAction;\n","import app from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\nimport store from './store';\nimport loginAction from './actions/loginAction';\nimport uuid from 'uuid';\n\n  var firebaseConfig = {\n    apiKey: \"AIzaSyD9hWSw27OO_qk9eRKm2TMJ_09JcdeZdm8\",\n    authDomain: \"bottomshelfnews.firebaseapp.com\",\n    databaseURL: \"https://bottomshelfnews.firebaseio.com\",\n    projectId: \"bottomshelfnews\",\n    storageBucket: \"\",\n    messagingSenderId: \"924993359943\",\n    appId: \"1:924993359943:web:99b6abdc71d38c4316e162\",\n    measurementId: \"G-LRJS1QWZZR\"\n  };\n// TODO: uncomment for actual date\n//let date = () => (new Date()).toJSON().slice(0,10);\nlet date = () => \"2020-01-08\";\nlet yesterday = () => \n\t(new Date(new Date().setDate(new Date().getDate()-1))).toJSON().slice(0,10);\n\nclass Firebase {\n\t// onAuthStateChange is a funciton called whenever a successful login/out occurs\n\tconstructor() {\n\t\tapp.initializeApp(firebaseConfig);\n\t\tthis.auth = app.auth();\n\t\tthis.db = app.database();\n\t\tthis.unsub = this.auth.onAuthStateChanged(user=>{\n\t\t\tif (user) {\n\t\t\t\tstore.dispatch(loginAction(user.displayName, user.uid));\n\t\t\t}\n\t\t\tthis.unsub(); //unsubscribe to auth change - only want this to run once \n\t\t});\n\t}\n\n\temail() {\n\t\treturn this.auth.currentUser ? this.auth.currentUser.email : null;\n\t}\n\n\tcreateUser = (email, pass, name) => {\n\t\treturn this.auth.createUserWithEmailAndPassword(email,pass)\n\t\t.then(res=> res.user.updateProfile({displayName:name}));\n\t}\n\n\tlogin = (email, pass)=> {\n\t\treturn this.auth.signInWithEmailAndPassword(email, pass);\n\t}\n\n\tlogOut = ()=> {\n\t\treturn this.auth.signOut();\n\t}\n\n\tresetPass = (email) => {\n\t\treturn this.auth.sendPasswordResetEmail(email);\n\t}\n\n\tupdatePass = (newPass) => {\n\t    return this.auth.currentUser.updatePassword(newPass);\n\t}\n\n\t//TODO: 'old' arg is for submitting an article with yesterday's timestamp\n\t// must be removed in production\n\tnewArticle = (title,url,category, old) => {\n\t\tif (!this.auth.currentUser) return; //should not happen\n\t\tlet posts = this.db.ref(\"stories\");\n\t\tlet newPost = posts.push();\n\t\t// TODO add timestamp maybe? encoded in fb auto-generated key but cryptic\n\t\t// don't need to save user who submitted article - will be closed to users\n\t\tlet d = old ? yesterday() : date();\n\t\treturn newPost.set( {\n\t\t\ttitle:title,\n\t\t\turl:url,\n\t\t\tcategory:category,\n\t\t\tdate: d\n\t\t});\n\t}\n\n\tnewHeadline = (storyID,headline) => {\n\t\tconsole.log(storyID, headline);\n\t\tif (!this.auth.currentUser) return; //should not happen\n\t\t// TODO  This was originally storysubmissions/storyID/newkey\n\t\t// Moved to submissions to guarantee uniqueness - needed??\n\t\tlet post = this.db.ref(\"submissions/\");\n\t\tlet newHeadlineKey = post.push().key;\n\t\tconsole.log(\"push done\");\n\t\tconsole.log(newHeadlineKey);\n\t\tlet uid = this.auth.currentUser.uid;\n\t\tlet name = this.auth.currentUser.displayName;\n\t\tlet updates = {};\n\n\t\t// Logging user's vote in 2 places: /submissions and /users \n\n\t\tupdates['/storysubmissions/' + storyID + '/' + newHeadlineKey] =\n\t\t\t{headline:headline, user:uid, username:name, votes: {[uid]:true}, key:newHeadlineKey};\n\n\t\tupdates['/storysubmissions/' + storyID + '/' + newHeadlineKey] =\n\t\t\t{headline:headline, user:uid, username:name, votes: {[uid]:true}, key:newHeadlineKey};\n\t\t\t\n\t\tupdates['/users/' + uid + '/stories/' + storyID + '/submissions/' + newHeadlineKey ] = true;\n\n\t\tupdates['/submissions/' + newHeadlineKey] = \n\t\t\t{headline:headline, user:uid, username:name, key:newHeadlineKey, story:storyID};\n\n\t\tconsole.log(updates);\n\t\tthis.db.ref().update(updates);\n\t\treturn newHeadlineKey;\n\t}\n\n\tfakeVotes = (postID, headlineID, count) => {\n\t\tlet post = this.db.ref(\"items/\" + postID + \"/submissions/\" + headlineID + \"/votes\");\n\t\tlet updates = {};\n\t\tfor (var i=0;i<count;i++) {\n\t\t\tvar fakeUID = uuid.v4().substr(0,10);\n\t\t\tvar up = Math.random() >= 0.3;\n\t\t\tupdates[fakeUID] = up;\n\t\t} \n\t\tconsole.log(updates);\n\t\tpost.update(updates);\n\t}\n\n\t// v can be true, false or null\n\tvote = (storyID, headlineID, v) => {\n\t\tconsole.log(storyID, headlineID, v);\n\t\tif (!this.auth.currentUser) return; //should not happen\n\t\t//console.log(this.auth.currentUser, postID, headlineID);\n\t\tlet post = this.db.ref(\"storysubmissions/\" + storyID + \"/\" + headlineID + \"/votes\");\n\t\tlet uid = this.auth.currentUser.uid;\n\t\tpost.update({[uid]:v});\n\t}\n\n\tgetTopPosts = () => {\n\t\t/* TODO: Filter to most recent 10ish? */\n\t\tlet stories = this.db.ref('stories')\n\t\t.orderByChild('date')\n\t\t.equalTo(date())\n\t\t.once('value');\n\t\treturn stories;\n\t}\n\n\t//TODO IMPORTANT: When you update this to use num, no num arg = all subs\n\tgetSubmissionsForPost(postID, num) {\n\t\treturn this.db.ref('storysubmissions/' + postID).once('value');\n\t}\n\n\tgetSubmissionsByUser = (uid) => {\n\t\t// Get a list of {postID:subID} for all user submissions\n\t\treturn this.db.ref('users/' + uid).once('value');\n\t}\n\n\tgetSubmissionByID = (subID) => {\n\t\t// Get a list of {postID:subID} for all user submissions\n\t\treturn this.db.ref('/submissions/' + subID).once('value');\n\t}\n\n\t// storyAndSubID looks like \"storyID/subID\"\n\tgetStorySubmissionByID = (storyAndSubID) => {\n\t\treturn this.db.ref('/storysubmissions/' + storyAndSubID).once('value');\n\t}\n\n\tgetStoryByID = (postID) => {\n\t\t// Get a list of {postID:subID} for all user submissions\n\t\treturn this.db.ref('/stories/' + postID).once('value');\n\t}\n\n\n}\n\nexport default Firebase;","import { createStore } from 'redux';\nimport Firebase from './Firebase';\n\nfunction mainReducer(state, action) {\n\tswitch (action.type) {\n\t\tcase 'LOGIN_ACTION':\n\t\t\treturn {...state, user:action.name, userID:action.uid}\n\t\tcase 'LOGOUT_ACTION':\n\t\t\treturn {...state, user:null, userID:null}\n\t\tcase 'GOT_POSTS_ACTION':\n\t\t\treturn {...state, posts:action.data}\n\t\tcase 'DELETE_ACTION':\n\t\t\treturn {...state, posts: state.posts.filter(post=>post.postID!==action.postID)};\n\t\tcase 'EDIT_ACTION':\n\t\t\tconsole.log(state);\n\t\t\treturn {...state, posts: state.posts.map(oldPost => \n\t\t\t\toldPost.postID!==action.postID ? oldPost \n\t\t\t\t : {...oldPost, title:action.newTitle, url:action.newURL}\n\t\t\t)};\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\nfunction defaultState() {\n\treturn {\n\t\tuser: null,\n\t\tposts:[],\n\t\tfirebase: new Firebase(),\n\t\tcategories: ['general','sports','politics']\n\t}\n}\nexport default createStore(\n  mainReducer,\n  defaultState()\n );\n\n","import React from 'react';\n/*\nTODO\nExplain purpose & scope of app\nDemo obvious functionality? e.g. pre-loaded article w/ lang dropdowns\n*/\nlet Landing = ()=>(\n\t<div>\n\t\t<p>This is the landing page. Welcome.</p>\n\t</div>\n\t)\nexport default Landing;","import React from 'react';\nimport {Link, withRouter} from 'react-router-dom';\nimport loginAction from './actions/loginAction';\nimport {connect} from 'react-redux';\n\nclass LoginForm extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {email:\"\", pass:\"\", error:null};\n\t}\n\tsubmit(event) {\n\t\tevent.preventDefault();\n\t\tthis.props.firebase.login(this.state.email, this.state.pass)\n\t\t\t.then(res=>{\n\t\t\t\tthis.setState({email:\"\",pass:\"\"});\n\t\t\t\tthis.props.history.push(\"/\");\t\n\t\t\t\tthis.props.setLogin(res.user.displayName, res.user.uid);\n\t\t\t})\n\t\t\t.catch(error=>{\n\t\t\t\t//this.setState({error:error});\n\t\t\t});\n\t}\n\n\tchange(event) {\n\t\tthis.setState({[event.target.name]:event.target.value});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t<form className=\"form-group col-6\" onSubmit={this.submit.bind(this)}>\n\t\t\t<label> Email: </label>\n\t\t\t<input name=\"email\" className=\"form-control\" value={this.state.email} onChange={this.change.bind(this)}/>\n\t\t\t<label> Password: </label>\n\t\t\t<input type=\"password\" name=\"pass\" className=\"form-control\" value={this.state.pass} onChange={this.change.bind(this)}/>\n\t\t\t<p></p>\n\t\t\t<button className=\"form-control\">submit</button>\n\t\t\t{this.state.error? <p>{this.state.error.message}</p> : null }\n\t\t\t<p>Don't have an account? <Link to='/signup'> Sign Up! </Link></p>\n\t\t</form>);\n\t}\n}\nlet mapStateToProps = function(state) {return {...state}};\nlet mapDispatchToProps = function(dispatch) {\n\treturn {\n\t\tsetLogin : (name,uid) => dispatch(loginAction(name, uid))\n\t};\n}\nlet Connected = connect(mapStateToProps, mapDispatchToProps)(LoginForm);\nconst Login = withRouter(Connected);\nexport default Login;","import React from 'react';\nimport {withRouter} from 'react-router-dom';\nimport {connect} from 'react-redux';\nclass SignupForm extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {email:\"\", pass:\"\", displayName:\"\"};\n\t}\n\tsubmit(event) {\n\t\tevent.preventDefault();\n\t\tconsole.log(\"submit\");\n\t\tconsole.log(this.props.firebase);\n\t\tthis.props.firebase\n\t\t\t.createUser(this.state.email, this.state.pass, this.state.displayName)\n\t\t\t\t.then(authUser => {\n\t\t\t\t\tconsole.log(\"signup success\");\n\t\t\t\t\tthis.setState({email:\"\", pass:\"\", error:null});\n\t\t\t\t\tthis.props.history.push(\"/home\");\n\t\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\t\tthis.setState({ error });\n\t\t\t\t});\n\t}\n\tchange(event) {\n\t\tthis.setState({[event.target.name]:event.target.value});\n\t}\n\trender() {\n\t\treturn (\n\t\t<div className=\"container\">\n\t\t\t<div className=\"row\">\n\t\t\t<h3 className=\"col-sm-6 text-center\">Register New Account</h3>\n\t\t\t</div> \n\t\t\t<form className=\"form-group col-6\" onSubmit={this.submit.bind(this)}>\n\t\t\t\t<label> Display Name: </label>\n\t\t\t\t<input name=\"displayName\" className=\"form-control\" value={this.state.displayName} onChange={this.change.bind(this)}/>\n\t\t\t\t<label> Email: </label>\n\t\t\t\t<input name=\"email\" className=\"form-control\" value={this.state.email} onChange={this.change.bind(this)}/>\n\t\t\t\t<label> Password: </label>\n\t\t\t\t<input type=\"password\" name=\"pass\" className=\"form-control\" value={this.state.pass} onChange={this.change.bind(this)}/>\n\t\t\t\t<p></p>\n\t\t\t\t<button className=\"form-control\">submit</button>\n\t\t\t</form>\n\t\t\t{this.state.error? \n\t\t\t\t<div>\n\t\t\t\t\t<h5>error!</h5>\n\t\t\t\t\t{this.state.error.message}\n\t\t\t\t</div> \n\t\t\t: null}\n\t\t</div>);\n\t}\n}\nlet mapStateToProps = (state) => ({firebase:state.firebase});\nconst SignupPage = connect(mapStateToProps)(withRouter(SignupForm));\nexport default SignupPage;","let gotPostsAction = (posts) => ({type:\"GOT_POSTS_ACTION\", data:posts});\nexport default gotPostsAction;","let deleteAction = (postID) => ({type: 'DELETE_ACTION', postID: postID});\n\nexport default deleteAction;\n","let editAction = (postID,title,url) => (\n\t{\n\t\ttype: 'EDIT_ACTION', \n\t\tpostID: postID, \n\t\tnewTitle:title, \n\t\tnewURL:url\n\t}\n);\n\nexport default editAction;","import React from 'react';\nimport {connect} from \"react-redux\";\nimport {Link} from \"react-router-dom\";\nclass Rewrite extends React.Component {\n\trender() {\n\t\tlet temp = this.props.rw.votes[this.props.uid];\n\t\tlet vote = \n\t\t\t(temp===true)? 1 : \n\t\t\t(temp===false)? -1 : 0;\n\t\treturn (\n\t\t  <div>\n\t\t  \t<div className='headlinebar'>\n\t\t\t    <span>{\"(\"+this.props.rw.score+\")  \"}</span>\n\t\t\t    <span>{this.props.rw.headline}</span>\n\t\t\t</div>\n\t\t  \t<div className='headlineinfo'>\n\t\t  \t\t<Link to={'/user/'+this.props.rw.user}>{this.props.rw.username}</Link>\n\t\t\t    {this.props.uid &&\n\t\t    \t\t<span style={{marginLeft:'4px'}} >\n\t\t    \t\t\t<span>Vote!</span>\n\t\t    \t\t\t{this.buttons(vote)}\n\t\t\t    \t</span>\n\t\t\t    }\n\t\t\t</div>\n\t\t</div>\n\t\t);\n\t}\n\tbuttons(vote) {\n\t\tif (vote===0) {\n\t\t\treturn (\n\t\t\t<span>\t\n\t\t\t\t<button onClick={()=>this.vote(true)} className='vote-button'>+</button>\n\t\t\t\t<button onClick={()=>this.vote(false)} className='vote-button'>-</button>\n\t\t\t</span>);\n\t\t}\t\n\t\telse if (vote===1) {\n\t\t\treturn (\n\t\t\t<span>\t\n\t\t\t\t<button onClick={()=>this.vote(null)} className='vote-button voted' >+</button>\n\t\t\t\t<button onClick={()=>this.vote(false)} className='vote-button'>-</button>\n\t\t\t</span>);\n\t\t}\n\t\telse {\n\t\t\treturn (\n\t\t\t<span>\t\n\t\t\t\t<button onClick={()=>this.vote(true)} className='vote-button'>+</button>\n\t\t\t\t<button onClick={()=>this.vote(null)} className='vote-button voted'>-</button>\n\t\t\t</span>);\n\t\t}\n\t}\n\tvote = (v) => {\n\t\tthis.props.firebase.vote(this.props.postID, this.props.rw.key, v);\n\t\tthis.props.vote(v)\n\t}\n}\n\nlet mstp = state=>({\n\tfirebase:state.firebase, \n\tuid: state.userID\n});\n\nexport default connect(mstp)(Rewrite);\n","import React, {useState} from \"react\";\nimport {connect} from \"react-redux\";\nimport {Link} from 'react-router-dom';\nimport deleteAction from './actions/deleteAction';\nimport editAction from './actions/editAction';\nimport Rewrite from './Rewrite';\nimport {withRouter} from 'react-router-dom';\nimport uuid from 'uuid';\n\n\nclass Item extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {headlines:this.props.headlines.slice(0,this.props.show)};\n  }\n\n  submit(title) {\n    if (!title) return;\n    let newkey = this.props.firebase.newHeadline(this.props.postID, title);\n    //console.log(this.props.headlines[0]);\n    let newhl = {headline:title, \n                 user:this.props.uid, \n                 username:this.props.name, \n                 key:newkey,\n                 score:1,\n                 votes: {[this.props.uid]:true}};\n    this.setState({headlines:this.state.headlines.concat([newhl])});\n  }\n  vote(headlineID, v) {\n    let newhl = this.state.headlines.slice(0);\n    for (var i=0; i<this.state.headlines.length; i++) {\n      if (this.state.headlines[i].key === headlineID) {\n        let temp = this.state.headlines[i];\n        temp.votes[this.props.uid] = v;\n        let reducer = (score, cur)=> score + (cur===true?1:(cur===false?-1:0));\n        let score = Object.values(temp.votes).reduce(reducer,0);\n        temp.score=score;\n        newhl[i] = temp;\n      }\n    }\n    this.setState({headlines:newhl});\n  }\n  render() {\n    //console.log(this.props.headlines);\n    return (\n      <li className='news-item'>\n        <p>\n          <Link to={'/detail/' + this.props.postID} className='original-title' >{this.props.orTitle}</Link>\n        </p>\n        {this.state.headlines.map(headline =>\n            <Rewrite\n              key={uuid.v4()}\n              className=\"best-rewrite\" \n              postID={this.props.postID} \n              rw={headline}\n              vote={this.vote.bind(this, headline.key) }\n            />\n          )\n        }\n        \n        {\n        this.props.uid && \n          <NewSubmission submit={this.submit.bind(this)}/>\n        }\n\n      </li>\n     );\n  }\n}\n\nlet NewSubmission = (props) => {\n  let [inEdit, setInEdit] = useState(false);\n  return (\n    <div>\n      {\n        inEdit? <Editor submit={props.submit} cancel={()=>setInEdit(false)} /> \n        : <button onClick={()=>setInEdit(true)}>New Submission</button>\n      }\n    </div>\n  )\n}\n\nlet Editor = props=> {\n  let text_ref = React.createRef();\n  return (\n      <div>\n        <fieldset>\n          <textarea ref={text_ref} name='title' style={{width:'80%', height: '2em'}} />\n        </fieldset>\n        <button onClick={()=>{props.submit(text_ref.current.value);props.cancel();}}>Submit</button>\n        <button onClick={props.cancel}>Cancel</button>\n      </div>\n    );\n}\n\nlet mstp = state=>({\n  firebase:state.firebase,\n  uid: state.userID,\n  name: state.user\n});\nlet mdtp = dispatch =>({\n  deleteSuccess: (id)=> dispatch(deleteAction(id)),\n  editSuccess: (id,title,url)=>dispatch(editAction(id,title,url))\n});\nexport default withRouter(connect(mstp,mdtp)(Item));","import uuid from 'uuid';\nimport React from 'react';\nimport Item from './Item';\nimport {connect} from 'react-redux';\n\n/* TODO:\n  Right now creating Items with the props I will send once data is organzied how I want.\n  First change here, then elsewhere\n  News Item consists of:\n  Original Title\n  URL\n  Best Rewriting\n  Other Rewritings (2)\n*/\nconst ItemList = (props) => {\n  return (\n    <div>\n      <ul className = 'links'>\n        {props.items.map(item =>\n         <Item \n            key={uuid.v4()} \n            postID = {item.postID}\n            category={item.category} \n            orTitle={item.title} \n            timestamp={item.timestamp}\n            headlines={item.headlines}\n            show={props.show?props.show:4}\n            url={item.url} \n         />\n        )}\n      </ul>\n    </div>\n  );\n  }\n\nlet mstp = state=>({logged_in_user: state.user, s:state});\nexport default (connect(mstp)(ItemList));","let sortHeadlines = (submissions) => {\n\t//console.log(submissions);\n\tif (!submissions) return [];\n\tlet headlines = Object.keys(submissions)\n\t.map(key=>{\n\t\tlet headline = submissions[key]\n\t\tlet reducer = function(score, cur) {\n\t\t\tif (cur) return score+1;\n\t\t\telse if (cur===false) return score-1;\n\t\t\treturn score;\n\t\t}\n\t\tif (!headline.votes) headline.votes = [];\t\n\t\tlet score = Object.values(headline.votes).reduce(reducer,0);\n\t\theadline.score=score;\n\t\theadline.key=key;\n\t\treturn headline;\n\t});\n\theadlines.sort( (a,b)=>b.score-a.score);\n\treturn headlines;\n}\nexport default sortHeadlines;\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport gotPostsAction from './actions/gotPostsAction';\nimport ItemList from './ItemList';\nimport sortHeadlines from './util/sortHeadlines';\nimport {Link} from 'react-router-dom';\n\nclass NewsHome extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\t// 'stories' is array of keys, ordered\n\t\t// submissions is key:subs\n\t\tthis.state = {submissions:null}\n\t}\n\t// we use DidMount for initial API call\n\tcomponentDidMount() {\n\t\tlet stories = null; // save story data as a [key:data] object\n\t\tlet keys = null;  // save story keys in sorted order\n\t\tthis.props.firebase.getTopPosts()\n\t\t.then(res=>res.val())\n\t\t.then(postsObject=> {\n\t\t\tif (!postsObject) return;\n\t\t\tstories = postsObject;\n\t\t\tkeys = Object.keys(postsObject);\n\t\t\tlet subs = keys.map(k=>this.props.firebase.getSubmissionsForPost(k));\n\t\t\treturn Promise.all(subs);\n\t\t})\n\t\t.then(results => results.map(r=>r.val()))\n\t\t.then(submissions=>{\n\t\t\tlet subs = submissions.map( (sub,index) => {\n\t\t\t\treturn {[keys[index]]:sub};\n\t\t\t});\n\t\t\tlet posts = keys.map((key,index) => {\n\t\t\t\tlet s = stories[key];\n\t\t\t\ts.postID=key;\n\t\t\t\tif (subs[index]) {\n\t\t\t\t\tlet headlines = subs[index][Object.keys(subs[index])[0]];\n\t\t\t\t\ts.headlines = sortHeadlines(headlines);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\ts.headlines = [];\n\t\t\t\t}\n\t\t\t\treturn s;\n\t\t\t});\n\t\t\tthis.props.gotPosts(posts);\n\t\t})\n\t\t.catch(e=>console.log(e));\n\t}\n\n\trender() {\n\t\treturn  (\n\t\t\t<div>\n\t\t\t\t<h2>News Articles</h2>\n\t\t        {this.props.firebase.auth.currentUser? <Link to='/new'>Submit Article</Link> : null }\n\t\t\t\t<ItemList items={this.props.posts} />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nlet mstp = state => {\n\treturn {\n\t\tfirebase:state.firebase,\n\t\tposts:state.posts};\n}\nlet mdtp = dispatch => ({\n\tgotPosts: (posts) => {dispatch(gotPostsAction(posts));}\n})\nexport default connect(mstp, mdtp)(NewsHome);\n","import React from 'react';\n\nclass Newspaper extends React.Component { \n    render() {\n        return (\n<div className=\"newspaper\">\n\t<h1>Bottom Shelf News</h1>\n</div>);\n    }\n}\nexport default Newspaper;","import React from 'react';\nimport ItemList from './ItemList';\nimport gotPostsAction from './actions/gotPostsAction';\nimport {connect} from 'react-redux';\n\nclass Category extends React.Component {\n\tcomponentDidMount() {\n\t\t//let category = this.props.match.params.category;\n\t\t/*\n\t    axios.get(\"http://localhost:8080/api/posts/category/\" + category)\n\t    .then( response => {\n\t    \tthis.props.gotPosts(response.data);\n\t    })\n\t    .catch(err => {\n\t    \tconsole.log(\"Error Fetching Posts:\");\n\t    \tconsole.log(err);\n\t    }); */\n\t}\n\n\trender() {\n\t\treturn  (\n\t\t\t<div>\n\t\t\t\t<h2>News Articles</h2>\n\t\t\t\t{/* HERE is where to conditionally show plus to add new post */}\n\t\t\t\t<ItemList show_category={true} items={this.props.posts} />\n\t\t\t</div>\n\t\t);\n\t}\n}\nlet mstp = state => {\n\treturn {posts:state.posts};\n}\nlet mdtp = dispatch => ({\n\tgotPosts: (posts) => dispatch(gotPostsAction(posts))\n})\nexport default connect(mstp, mdtp)(Category);\n","import React from 'react';\nimport gotPostsAction from './actions/gotPostsAction';\nimport {connect} from 'react-redux';\nimport ItemList from './ItemList';\nimport sortHeadlines from './util/sortHeadlines';\n\nclass UserPage extends React.Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {postsAndUserSubmissions:null}\n\t}\n\t/* \n\tTODO this is roundabout fuckery\n\tfirst get all posts WITH user subs\n\tretrieve each individually\n\tfilter subs to target user & display\n\tthis is garbage\n\t*/ \n\tcomponentDidMount() {\n\t\tlet user = this.props.match.params.user;\n\t\tthis.props.firebase.getSubmissionsByUser(user)\n\t\t.then(res => res.val())\n\t\t.then(posts => {\n\t\t\tconsole.log(posts);\n\n\t\t\tif (!posts || !posts.stories) return;\n\n\t\t\tlet storiesWithUserSubs = posts.stories;\n\t\t\tlet story_keys = Object.keys(storiesWithUserSubs);\n\n\t\t\tlet subPromises = story_keys.map(key => {\n\t\t\t\tlet subs = Object.keys(storiesWithUserSubs[key].submissions);\n\t\t\t\treturn subs.map(subID => key + \"/\" + subID);\n\t\t\t})\n\t\t\t.flat()\n\t\t\t.map(k=>this.props.firebase.getStorySubmissionByID(k));\n\n\t\t\tPromise.all(subPromises)\n\t\t\t.then(res => res.map(sub=>{\n\t\t\t\tlet path = sub.ref.path.toString().split('/');\n\t\t\t\tlet storyID = path[path.length-2];\n\t\t\t\treturn [storyID, sub.val()];\n\t\t\t}))\n\t\t\t.then(submissions=>{\n\t\t\t\tlet stories = {};\n\t\t\t\tsubmissions.forEach(sub => {\n\t\t\t\t\tif (!stories[sub[0]]) {\n\t\t\t\t\t\tstories[sub[0]] = [sub[1]];\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tstories[sub[0]].push(sub[1]);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\tlet story_promises = story_keys.map(k=>this.props.firebase.getStoryByID(k))\n\t\t\t\tPromise.all(story_promises)\n\t\t\t\t.then(res=>res.map(story=>[story.key, story.val()]))\n\t\t\t\t.then(story_data=>{\n\t\t\t\t\tconsole.log(story_data);\n\t\t\t\t\tlet items = [];\n\t\t\t\t\tstory_data.forEach(story=>{\n\t\t\t\t\t\tlet key = story[0];\n\t\t\t\t\t\tlet temp = stories[key];\n\t\t\t\t\t\tstories[key] = story[1];\n\t\t\t\t\t\tstories[key].headlines = sortHeadlines(temp);\n\t\t\t\t\t\tstories[key].postID=key;\n\t\t\t\t\t\titems.push(stories[key]);\n\t\t\t\t\t})\n\t\t\t\t\tthis.setState({postsAndUserSubmissions:items});\n\t\t\t\t})\n\t\t\t});\n\t\t})\n\t}\n\n\trender() {\n\t\tif (!this.state.postsAndUserSubmissions) return <div></div>;\n\t\treturn <ItemList items={this.state.postsAndUserSubmissions} show={100}/>\n\t}\n}\nlet mstp = state => {\n\treturn {firebase:state.firebase};\n}\nlet mdtp = dispatch => ({\n\tgotPosts: (posts) => dispatch(gotPostsAction(posts))\n})\nexport default connect(mstp, mdtp)(UserPage);\n","import React from 'react';\nimport {withRouter} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport uuid from 'uuid';\n\nconst isValidURL = function(str) {\n    return true;//(str.substring(0,7)==='http://' || str.substring(0,8) === 'https://' || str[0]==='#')\n}\n\nclass NewPost extends React.Component {\n\n  cancel = (e )=> {\n    e.preventDefault();\n    this.props.history.push('/news');\n  }\n  fakeVotes() {\n    console.log(\"fake votes\");\n    this.props.posts.forEach(post => {\n      console.log(post.submissions);\n      if (!post.submissions) return;\n      Object.keys(post.submissions).forEach(sub =>{\n        this.props.firebase.fakeVotes(post.postID, sub, 10);\n      });\n    });\n  }\n  \n  fakeSubs() {\n    console.log(\"fake subs\");\n    this.props.posts.forEach(post => {\n      console.log(post);\n      [1,2,3].forEach(num => this.props.firebase.newHeadline(post.postID, \"Fake Headline #\" + num));\n    });\n  }\n  \n  fake_yesterday() {\n      this.props.firebase.newArticle(\"OLD First\",\"http://example.com\",\"general\", true);\n      this.props.firebase.newArticle(\"OLD Second\",\"http://example.com\",\"general\", true);\n      this.props.firebase.newArticle(\"OLD Third one - Fake Post\",\"http://example.com\",\"general\", true);\n      this.props.firebase.newArticle(\"OLD Fourth\",\"http://example.com\",\"general\", true);\n      this.props.firebase.newArticle(\"OLD fifth\",\"http://example.com\",\"general\", true);\n      this.props.firebase.newArticle(\"OLD kdlfjaklsdjfalksdjf\",\"http://example.com\",\"general\", true);\n      this.props.firebase.newArticle(\"OLD djsfasdf\",\"http://example.com\",\"general\", true);\n      this.props.firebase.newArticle(\"OLD A News Article\",\"http://example.com\",\"general\", true);\n      this.props.firebase.newArticle(\"OLD ABC!\",\"http://example.com\",\"general\", true);\n      this.props.firebase.newArticle(\"OLD hello \",\"http://example.com\",\"general\", true);\n      this.props.firebase.newArticle(\"OLD last one\",\"http://example.com\",\"general\", true);\n      this.props.history.push(\"/news\");\n  }\n  fake() {\n      this.props.firebase.newArticle(\"First\",\"http://example.com\",\"general\");\n      this.props.firebase.newArticle(\"Second\",\"http://example.com\",\"general\");\n      this.props.firebase.newArticle(\"Third one - Fake Post\",\"http://example.com\",\"general\");\n      this.props.firebase.newArticle(\"Fourth\",\"http://example.com\",\"general\");\n      this.props.firebase.newArticle(\"fifth\",\"http://example.com\",\"general\");\n      this.props.firebase.newArticle(\"kdlfjaklsdjfalksdjf\",\"http://example.com\",\"general\");\n      this.props.firebase.newArticle(\"djsfasdf\",\"http://example.com\",\"general\");\n      this.props.firebase.newArticle(\"A News Article\",\"http://example.com\",\"general\");\n      this.props.firebase.newArticle(\"ABC!\",\"http://example.com\",\"general\");\n      this.props.firebase.newArticle(\"hello \",\"http://example.com\",\"general\");\n      this.props.firebase.newArticle(\"last one\",\"http://example.com\",\"general\");\n      this.props.history.push(\"/news\");\n  }\n\n  submit = (e)=> {\n    e.preventDefault();\n    if (e.target.url.value && e.target.title.value) {\n      if (!isValidURL(e.target.url.value)) {\n        //TODO handle this\n        console.log(\"invalid URL\");\n        return;\n      }\n      let [title,url,cat] = [e.target.title.value, e.target.url.value, e.target.category.value];\n      this.props.firebase.newArticle(title,url,cat);\n      this.props.history.push(\"/news\");\n    }\n    else {\n      //tell the user to fill out the form properly\n    }\n  }\n\n  render() {\n      if (!this.props.user) {\n        this.props.history.push('/login');\n        return null;\n      }\n      var selector;\n\n      //if props.params has a specific category to default to:\n      if (this.props.params && this.props.params.category) {\n        selector = (\n            <select name='category'>\n              <option value={this.props.params.category}>\n                {this.props.params.category}\n              </option>\n              {\n                this.props.categories\n                .filter(name => name !== this.props.params.category)\n                .map(name => <option key={uuid.v4()} value={name}>{name} </option>)\n              }\n            </select>\n          )\n      }\n\n      //if no specific category - order is the default from [categories]\n      else {\n        selector = (\n          <select name='category'>\n                {this.props.categories.map(name => \n                  <option key={uuid.v4()} value={name}>{name}</option>\n                  )}\n          </select>\n        )\n      }\n\n      return (\n        <div className='new-post'>\n          <h2>Submit a New Arcticle</h2>\n          <button onClick={this.fake.bind(this)}>Make a Bunch of Fake Posts</button>\n          <button onClick={this.fake_yesterday.bind(this)}>From Yesterday</button>\n          <button onClick={this.fakeSubs.bind(this)}>Submit a Few Fake Headlines for Each Post</button>\n          <button onClick={this.fakeVotes.bind(this)}>Fake Voting on Headlines</button>\n          <form autoComplete='off' action='' onSubmit = {this.submit}>\n            <fieldset className='form-group wrap'>\n              <div className='input-name'>\n                Title\n              </div>\n              <textarea className='form-control' autoFocus={true} name='title' placeholder='title' />\n              <div className='byline'>\n                Enter the original title of the article\n              </div>\n            </fieldset>\n        \n            <fieldset className='form-group wrap'>\n              <div className='input-name'>\n               URL\n              </div>\n              <textarea className='form-control' name='url' placeholder='URL' />\n              <div className='byline'>\n                Please submit a link to a valid news source\n              </div>\n            </fieldset>\n            <fieldset className='form-group wrap'>\n              <div className='input-name'>\n              Article Category\n              </div>\n              {selector}\n            </fieldset>\n            <div className = 'new-post-buttons'>\n              <button type='submit'>Submit</button>\n              <button onClick={this.cancel}>Cancel</button>\n            </div>\n          </form>\n        </div>\n      )\n  }\n}\n\nconst MapStateToProps = state => ({posts:state.posts, categories:state.categories, user:state.user, firebase:state.firebase});\n\nexport default withRouter(connect(MapStateToProps)(NewPost));\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport Item from './Item';\nimport sortHeadlines from './util/sortHeadlines';\nclass Detail extends React.Component {\n\t/*\n\tFetch all for this.props.match.params.postID from server\n\tDisplay expanded version of Item\n\t*/\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {item:null}\n\t}\n\tcomponentDidMount() {\n\t\tlet storyID = this.props.match.params.postID;\n\t\tPromise.all(\n\t\t\t[this.props.firebase.getSubmissionsForPost(storyID,100),\n\t\t\tthis.props.firebase.getStoryByID(storyID)]\n\t\t)\n\t\t.then(res=>{\n\t\t\tlet subs = res[0].val();\n\t\t\tlet story = res[1].val();\n\t\t\tif (subs) {\n\t\t\t\tstory.headlines=sortHeadlines(subs);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tstory.headlines = [];\n\t\t\t}\n\t\t\tconsole.log(story);\n\t\t\tthis.setState({item:story});\n\t\t})\n\t}\n\trender() {\n\t\tif (!this.state.item) return <div>hi</div>;\n\t\tlet item = this.state.item;\n\t\treturn <ul>\n\t\t\t<Item \n            postID = {this.props.match.params.postID}\n            category={item.category} \n            orTitle={item.title} \n            timestamp={item.timestamp}\n            headlines={item.headlines}\n            show={100}\n            url={item.url} \n\t        />\n\t     </ul>;\n\t}\n}\nlet mstp = state => {\n\treturn {\n\t\tfirebase:state.firebase\n\t};\n}\nexport default connect(mstp)(Detail);","import React from 'react';\nimport {Link, Route} from 'react-router-dom';\nimport Landing from './Landing';\nimport Login from './Login';\nimport Signup from './Signup';\nimport {connect} from 'react-redux';\nimport NewsHome from './NewsHome';\nimport Newspaper from './Newspaper';\nimport Category from './Category';\nimport UserPage from './UserPage';\nimport NewPost from './NewPost';\nimport Detail from './Detail';\n\nfunction TopBar(props) {\n\tlet logOut = ()=>{\n\t\tprops.firebase.logOut();\n\t\tprops.doLogout();\n\t};\n\treturn (\n\t\t\t<div className=\"top\">\n\t\t        <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n\t\t        \t<ul className=\"nav navbar-nav\">\n\t\t        \t\t<li>\n\t\t\t\t\t\t\t<Link to={'/'}>\n\t\t\t\t\t\t\t\t<button className=\"btn btn-primary\">Home</button>\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<Link to={'/news'}>\n\t\t\t\t\t\t\t\t<button className=\"btn btn-primary\">News</button>\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t<Link to={'/newspaper'}>\n\t\t\t\t\t\t\t\t<button className=\"btn btn-primary\">The Paper</button>\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t{ props.user? \n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<Link to={'/user/' + props.uid}>\n\t\t\t\t\t\t\t\t\t<button className=\"btn btn-primary\">Profile</button>\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t</li>  \n\t\t\t\t\t\t : \n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<Link to={'/login'}>\n\t\t\t\t\t\t\t\t\t<button className=\"btn btn-primary\">Log In</button>\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t}\n\t\t\t\t\t</ul>\n\t\t        \t<ul className=\"nav navbar-nav ml-auto\">\n\t\t        \t\t{props.user &&  <li><span className=\"navbar-text\">{props.user}</span></li>}\n\t\t        \t\t{ props.user? \n\t\t\t        \t\t<li>\n\t\t\t\t\t\t\t\t<button className=\"btn btn-primary float-right\" onClick={logOut}>Log Out</button>\n\t\t\t        \t\t</li>\n\t\t\t        \t : \n\t\t\t        \t\t<li>\n\t\t\t\t\t\t\t\t<Link to={'/signup'}>\n\t\t\t\t\t\t\t\t\t<button className=\"btn btn-primary\">Sign Up</button>\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t        \t\t</li>\n\t\t\t        \t}\n\t\t\t\t\t</ul>\n\t\t\t\t</nav>\n\t\t\t\t<Route exact path='/' component = {Landing} />\n\t\t\t\t<Route path='/news' component = {NewsHome} />\n\t\t\t\t<Route path='/newspaper' component = {Newspaper} />\n\t\t\t\t<Route path='/login' component = {Login} />\n\t\t\t\t<Route path='/signup' component = {Signup} />\n\t\t\t\t<Route path='/detail/:postID' component = {Detail} />\n\t\t\t\t<Route path='/category/:category' component = {Category} />\n\t\t\t\t<Route path='/user/:user' component = {UserPage} />\n\t\t\t\t<Route path='/new' component = {NewPost} />\n\t\t\t</div>\n\t\t);\n}\n\nfunction mstp(state, ownProps) {\n\treturn {firebase:state.firebase, user:state.user, uid:state.userID};\n}\nfunction mdtp(disp) {\n\treturn {\n\t\tdoLogout: ()=>disp({type:'LOGOUT_ACTION'})\n\t}\n}\nexport default connect(mstp,mdtp)(TopBar);\n\n\n","import React from 'react';\nimport {BrowserRouter as Router} from 'react-router-dom';\n//import logo from './logo.svg';\nimport './App.css';\nimport TopBar from './TopBar';\n\nclass App extends React.Component {\n\trender() {\n\t\treturn (\n\t\t\t<Router>\n\t\t\t\t<TopBar/>\n\t\t\t</Router>\n\t\t);\n\t}\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport configureStore from './store';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nReactDOM.render(\n\t\t\t<Provider store={configureStore}>\n\t\t\t\t<App/>\n\t\t\t</Provider>,\n\tdocument.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}